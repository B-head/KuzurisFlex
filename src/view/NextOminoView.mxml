<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/halo"
			   xmlns:v="view.*">
	<fx:Script>
		<![CDATA[
		import events.GameEvent;
		import model.*;
		
		[Bindable]
		public var blockGraphics:BlockGraphics;
		[Bindable] 
		public var shockGraphics:ShockEffectGraphics;
		private var _gameModel:GameModel;
		private const moveDuration:int = 1000 * 8 / 60;
		
		public function get gameModel():GameModel
		{
			return _gameModel;
		}
		public function set gameModel(value:GameModel):void
		{
			_gameModel = value;
			_gameModel.addTerget(GameEvent.updateNext, updateNextListener);
			_gameModel.addTerget(GameEvent.firstUpdateNext, updateNextListener);
		}
		
		public function updateNextListener(e:GameEvent):void
		{
			if (_gameModel.isGameOver) return;
			updateOmino();
			if (e.type == GameEvent.firstUpdateNext) return;
			playEffect();
		}
		
		private function updateOmino():void
		{
			var nextOmino:Vector.<OminoField> = _gameModel.getNextOmino();
			var shockSave:Boolean = _gameModel.shockSave;
			next0.update(nextOmino[0], shockSave);
			next1.update(nextOmino[1], shockSave);
			next2.update(nextOmino[2], shockSave);
			next3.update(nextOmino[3], shockSave);
			next4.update(nextOmino[4], shockSave);
			next5.update(nextOmino[5], shockSave);
			adjust(next0, nextOmino[0], 0, circle0.y, circleWidth, circleHeight, 1);
			adjust(next1, nextOmino[1], 0, circle1.y, circleWidth, circleHeight, 1);
			adjust(next2, nextOmino[2], 0, circle2.y, circleWidth, circleHeight, 1);
			adjust(next3, nextOmino[3], 0, circle3.y, circleWidth, circleHeight, 1);
			adjust(next4, nextOmino[4], 0, circle4.y, circleWidth, circleHeight, 1);
			adjust(next5, nextOmino[5], 0, circle5.y, circleWidth, circleHeight, 1);
		}
		
		private function playEffect():void
		{
			moveNext0.yTo = next0.y;
			moveNext1.yTo = next1.y;
			moveNext2.yTo = next2.y;
			moveNext3.yTo = next3.y;
			moveNext4.yTo = next4.y;
			moveNext5.yTo = next5.y;
			moveNext0.play();
			moveNext1.play();
			moveNext2.play();
			moveNext3.play();
			moveNext4.play();
			moveNext5.play();
		}
		
		private function adjust(fieldView:BlockFieldView, omino:OminoField, x:int, y:int, width:int, height:int, scale:Number):void
		{
			if (omino == null) return;
			var rect:Rect = omino.getRect();
			var w:Number = rect.width * blockGraphics.blockWidth;
			var h:Number = rect.height * blockGraphics.blockHeight;
			var sx:Number = Math.min(1, width / w);
			var sy:Number = Math.min(1, height / h);
			var s:Number = Math.min(scale, sx, sy);
			fieldView.scaleX = s;
			fieldView.scaleY = s;
			fieldView.x = x + (width - w * s) / 2;
			fieldView.y = y + (height - h * s) / 2;
		}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Boolean id="pause"/>
		<fx:Boolean id="compact"/>
		<fx:Number id="circleWidth"/>
		<fx:Number id="circleHeight"/>
		<fx:Number id="gap"/>
		<s:Move id="moveNext0" target="{next0}" duration="{moveDuration}" yBy="{-(circleHeight + gap)}" />
		<s:Move id="moveNext1" target="{next1}" duration="{moveDuration}" yBy="{-(circleHeight + gap)}" />
		<s:Move id="moveNext2" target="{next2}" duration="{moveDuration}" yBy="{-(circleHeight + gap)}" />
		<s:Move id="moveNext3" target="{next3}" duration="{moveDuration}" yBy="{-(circleHeight + gap)}" />
		<s:Move id="moveNext4" target="{next4}" duration="{moveDuration}" yBy="{-(circleHeight + gap)}" />
		<s:Move id="moveNext5" target="{next5}" duration="{moveDuration}" yBy="{-(circleHeight + gap)}" />
		<s:RadialGradient id="ncFill">
			<s:GradientEntry color="#35a16b" ratio="0" alpha="0" />
			<s:GradientEntry color="#35a16b" ratio="1" alpha="1" />
		</s:RadialGradient>
	</fx:Declarations>
	
	<s:Group y="{circleHeight / 4}">
		<s:Group cacheAsBitmap="true">
			<s:Ellipse id="circle0" x="0" y="{(circleHeight + gap) * 0}" width="{circleWidth}" height="{circleHeight}" fill="{ncFill}"/>
			<s:Ellipse id="circle1" x="0" y="{(circleHeight + gap) * 1}" width="{circleWidth}" height="{circleHeight}" fill="{ncFill}"/>
			<s:Ellipse id="circle2" x="0" y="{(circleHeight + gap) * 2}" width="{circleWidth}" height="{circleHeight}" fill="{ncFill}"/>
			<s:Ellipse id="circle3" x="0" y="{(circleHeight + gap) * 3}" width="{circleWidth}" height="{circleHeight}" fill="{ncFill}"/>
			<s:Ellipse id="circle4" x="0" y="{(circleHeight + gap) * 4}" width="{circleWidth}" height="{circleHeight}" fill="{ncFill}"/>
			<s:Ellipse id="circle5" x="0" y="{(circleHeight + gap) * 5}" width="{circleWidth}" height="{circleHeight}" fill="{ncFill}"/>
			<s:Label x="0" y="{-circleHeight / 4}" width="{circleWidth}" textAlign="center" text="ネクスト" visible="{!compact}" />
		</s:Group>
		<v:BlockFieldView id="next0" blockGraphics="{blockGraphics}" shockGraphics="{shockGraphics}" visible="{!pause}"/>
		<v:BlockFieldView id="next1" blockGraphics="{blockGraphics}" shockGraphics="{shockGraphics}" visible="{!pause}"/>
		<v:BlockFieldView id="next2" blockGraphics="{blockGraphics}" shockGraphics="{shockGraphics}" visible="{!pause}"/>
		<v:BlockFieldView id="next3" blockGraphics="{blockGraphics}" shockGraphics="{shockGraphics}" visible="{!pause}"/>
		<v:BlockFieldView id="next4" blockGraphics="{blockGraphics}" shockGraphics="{shockGraphics}" visible="{!pause}"/>
		<v:BlockFieldView id="next5" blockGraphics="{blockGraphics}" shockGraphics="{shockGraphics}" visible="{!pause}"/>
	</s:Group>
</s:Group>
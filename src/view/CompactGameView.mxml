<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:v="view.*"
		 initialize="init()">
		 
	<fx:Script>
		<![CDATA[
		import events.*;
		import model.*;
		import model.network.*;
		import mx.events.*;
		
		[Bindable] 
		public var blockGraphics:BlockGraphics;
		[Bindable] 
		public var breakLineGraphics:BreakLineGraphics;
		[Bindable] 
		public var breakBlockGraphics:BreakBlockGraphics;
		[Bindable] 
		private var _gameManager:GameManager;
		[Bindable]
		private var _gameModel:GameModel;
		[Bindable]
		private var playerInfo:PlayerInformation;
		[Bindable]
		private var _playerIndex:int;
		
		public function get gameManager():GameManager
		{
			return _gameManager;
		}
		public function set gameManager(value:GameManager):void
		{
			_gameManager = value;
			_gameManager.addTerget(KuzurisEvent.gameReady, function():void { currentState = "ready" }, false);
			_gameManager.addTerget(KuzurisEvent.gameStart, function():void { currentState = "normal" }, false);
			_gameManager.addTerget(KuzurisEvent.gamePause, function():void { currentState = "pause" }, false);
			_gameManager.addTerget(KuzurisEvent.gameResume, function():void { currentState = "normal" }, false);
			_gameManager.addTerget(KuzurisEvent.initializeGameModel, updateGameModel);
			_gameManager.addTerget(KuzurisEvent.playerUpdate, updatePlayerListener);
			playerInfo = _gameManager.getPlayerInfo(_playerIndex);
		}
		
		public function get playerIndex():int
		{
			return _playerIndex;
		}
		public function set playerIndex(value:int):void
		{
			_playerIndex = value;
			if (_gameManager == null) return;
			playerInfo = _gameManager.getPlayerInfo(_playerIndex);
		}
		
		public function updateGameModel(e:KuzurisEvent):void
		{
			_gameModel = _gameManager.getGameModel(_playerIndex);
			update();
		}
		
		private function updatePlayerListener(e:KuzurisEvent):void
		{
			if (_gameManager == null) return;
			playerInfo = _gameManager.getPlayerInfo(_playerIndex);
		}
		
		private function init():void
		{
			blockGraphics = Main.compactBlockGraphics;
			breakLineGraphics = Main.compactBreakLineGraphics;
			breakBlockGraphics = Main.compactBreakBlockGraphics;
		}
		
		public function update():void
		{
			if (_gameModel == null) return;
			main.update(_gameModel.getMainField(), _gameModel.shockSave);
			main.x = 8;
			main.y = -144;
			fall.update(_gameModel.getFallField(), _gameModel.shockSave);
			fall.x = 8;
			fall.y = _gameModel.ffy * blockGraphics.blockHeight - 144;
			ghost.update(_gameModel.getControlOmino(), _gameModel.shockSave);
			ghost.x = _gameModel.cox * blockGraphics.blockWidth + 8;
			ghost.y = _gameModel.goy * blockGraphics.blockHeight - 144;
			control.update(_gameModel.getControlOmino(), _gameModel.shockSave);
			control.x = _gameModel.cox * blockGraphics.blockWidth + 8;
			control.y = _gameModel.coy * blockGraphics.blockHeight - 144;
			breakLineContainer.update();
			incrementFrame();
		}
		
		public function incrementFrame():void
		{
			breakLineContainer.incrementFrame();
		}
		
		[Embed(source='../graphic/frame.png')]
		private var Frame:Class;
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal" />
		<s:State name="ready" />
		<s:State name="pause" />
	</s:states>
	
	<fx:Declarations>
		<fx:Boolean id="battle"/>
		<fx:Boolean id="reverse"/>
		<v:GameModelSoundEffect gameModel="{_gameModel}"/>
		<s:NumberFormatter id="nf" fractionalDigits="2" trailingZeros="true" useGrouping="false" />
		<v:FrameTimeFormatter id="frameTime" frameRate="60"/>
	</fx:Declarations>
	
	<s:Group x="{reverse ? 36 : 0}" y="0" clipAndEnableScrolling="true" width="96" height="200">
		<s:Group x="0" y="16" cacheAsBitmap="true">
			<s:Rect x="7" y="0" width="81" height="160" alpha="0.8">
				<s:fill>
					<s:SolidColor color="#000000"/>
				</s:fill>
				<s:stroke>
					<s:SolidColorStroke color="#ff9900" weight="1" />
				</s:stroke>
			</s:Rect>
			<s:Image source="{Color.coloring(new Frame(), 192, 336, Color.blue)}" scaleX="0.5" scaleY="0.5"/>
		</s:Group>
		<v:BreakLineScoreBoard x="0" y="18" width="96" battle="{battle}" gameModel="{_gameModel}"/>
		<v:BlockFieldView id="ghost" blockGraphics="{blockGraphics}" visible.pause="false" showSpecial="true" isGhost="true"/>
		<v:BlockFieldView id="control" blockGraphics="{blockGraphics}" visible.pause="false" showSpecial="true"/>
		<v:BlockFieldView id="main" blockGraphics="{blockGraphics}" visible.pause="false" showSpecial="true"/>
		<v:BlockFieldView id="fall" blockGraphics="{blockGraphics}" visible.pause="false" showSpecial="true"/>
		<v:BreakLineEffectContainer id="breakLineContainer" x="8" y="-144" breakLineGraphics="{breakLineGraphics}" breakBlockGraphics="{breakBlockGraphics}" gameModel="{_gameModel}" />
		<v:BonusScoreBoard x="0" y="96" width="96" battle="{battle}" gameModel="{_gameModel}"/>
		<s:Label styleName="ready" x="0" verticalCenter="0" width="96" text="レディ" visible="false" visible.ready="true" />
		<v:ObstacleView id="obstacle" x="8" y="0" width="80" height="16" blockScale="0.5" visible="false" gameModel="{_gameModel}"/>
		<s:BorderContainer x="0" y="176" width="96" height="24" visible="{playerInfo != null}">
			<s:layout>
				<s:VerticalLayout verticalAlign="middle" horizontalAlign="justify" paddingTop="4" paddingBottom="4" paddingLeft="4" paddingRight="4" gap="1" />
			</s:layout>
			<s:Label text="{playerInfo.getName()}" textAlign="center" />
		</s:BorderContainer>
	</s:Group>
	<v:NextOminoView id="next" x="{reverse ? 0 : 96}" y="16" circleWidth="32" circleHeight="24" gap="2"
		blockGraphics="{blockGraphics}" gameModel="{_gameModel}" pause="false" pause.pause="true" compact="true" />
</s:Group>
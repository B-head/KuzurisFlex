<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:v="view.*"
			   initialize="init()"
			   enterFrame="onEnterFrame()">
			   
	<fx:Script>
		<![CDATA[
		import event.GameEvent;
		import event.GameManagerEvent;
		import model.*;
		import flash.events.*;
		import model.ai.*;
		
		private var manager:GameManager;
		[Bindable]
		private var pause:Boolean;
		
		public function init():void
		{
			parentApplication.addEventListener(Main.pauseEvent, pauseListener);
			manager = new GameManager(2);
			manager.addEventListener(GameManagerEvent.gameEnd, endListener);
			manager.setPlayer(0, parentApplication.input);
			manager.setPlayer(1, GameAIManager.createDefaultAIManager());
			manager.initialize();
			player1.gameModel = manager.getGameModel(0);
			player2.gameModel = manager.getGameModel(1);
			player1.blockGraphics = new BlockGraphics();
			player2.blockGraphics = new BlockGraphics();
			prepare();
		}
		
		private function changePlayer(p2:Boolean):void
		{
			if (manager.isHumanPlayer(0) && manager.isHumanPlayer(1))
			{
				if (p2)
				{
					manager.setPlayer(0, parentApplication.input);
					manager.setPlayer(1, GameAIManager.createDefaultAIManager());
				}
				else
				{
					manager.setPlayer(0, GameAIManager.createDefaultAIManager());
					manager.setPlayer(1, parentApplication.input);
				}
			}
			else if (p2)
			{
				if (manager.isHumanPlayer(0))
				{
					manager.setPlayer(0, parentApplication.inputVersus1);
					manager.setPlayer(1, parentApplication.inputVersus2);
				}
				else if (manager.isHumanPlayer(1))
				{
					manager.setPlayer(1, GameAIManager.createDefaultAIManager());
				}
				else
				{
					manager.setPlayer(1, parentApplication.input);
				}
			}
			else
			{
				if (manager.isHumanPlayer(1))
				{
					manager.setPlayer(0, parentApplication.inputVersus1);
					manager.setPlayer(1, parentApplication.inputVersus2);
				}
				else if (manager.isHumanPlayer(0))
				{
					manager.setPlayer(0, GameAIManager.createDefaultAIManager());
				}
				else
				{
					manager.setPlayer(0, parentApplication.input);
				}
			}
		}
		
		private function prepare():void
		{
			parentApplication.bgm.stop();
			manager.endGame();
			currentState = "prepare";
			pause = false;
		}
		
		private function start():void
		{
			var setting:GameSetting = new GameSetting();
			manager.initialize();
			manager.setAILevel(0, aiLevel1.value);
			manager.setAILevel(1, aiLevel2.value);
			player1.gameModel = manager.getGameModel(0);
			player2.gameModel = manager.getGameModel(1);
			manager.startGame(setting);
			parentApplication.bgm.play(false);
			currentState = "hidden";
			setFocus();
			pause = false;
		}
		
		private function pauseing():void
		{
			parentApplication.bgm.stop();
			manager.phaseGame();
			currentState = "pause";
			pause = true;
		}
		
		private function resume():void
		{
			parentApplication.bgm.play(true);
			manager.resumeGame();
			currentState = "hidden";
			setFocus();
			pause = false;
		}
		
		private function onEnterFrame():void
		{
			if (!manager.isExecution()) return;
			manager.forwardGame();
		}
		
		private function pauseListener(e:Event):void
		{
			if (pause)
			{
				resume();
			}
			else
			{
				if (!manager.isExecution()) return;
				pauseing();
			}
		}
		
		private function endListener(e:GameManagerEvent):void
		{
			prepare();
		}
		]]>
	</fx:Script>

	<fx:Metadata>
		[Event(name="back", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<s:states>
		<s:State name="hidden" />
		<s:State name="prepare" />
		<s:State name="pause" />
		<s:State name="keyConfig" />
	</s:states>
	
	<v:GameView id="player1" x="18" y="24" reverse="false" pause="{pause}"/>
	<v:GameView id="player2" x="436" y="24" reverse="true" pause="{pause}"/>
	<s:VGroup includeIn="prepare" x="143" y="224" width="150" horizontalAlign="center">
		<s:Button styleName="start" width="150" label="スタート" buttonDown="start()" />
		<s:Button width="150" label="キーコンフィグ" buttonDown="currentState = 'keyConfig'"/>
		<s:Button styleName="back" width="100" label="もどる" buttonDown="dispatchEvent(new Event('back'))" />
	</s:VGroup>
	<s:VGroup includeIn="prepare" x="143" y="334" width="150" horizontalAlign="center">
		<s:ButtonBar id="playerType1" width="150" requireSelection="true" selectedIndex="0" changing="changePlayer(false)">  
			<mx:ArrayCollection source="['人間', 'AI']"/>
		</s:ButtonBar>
		<s:Label styleName="menu-label" text="AIレベル{aiLevel1.value}" visible="{playerType1.selectedIndex == 1}" />
		<s:HSlider id="aiLevel1" width="150" minimum="1" maximum="20" showDataTip="false" visible="{playerType1.selectedIndex == 1}" />
	</s:VGroup>
	<s:VGroup includeIn="prepare" x="561" y="334" width="150" horizontalAlign="center">
		<s:ButtonBar id="playerType2" width="150" requireSelection="true" selectedIndex="1" changing="changePlayer(true)">  
			<mx:ArrayCollection source="['人間', 'AI']"/>
		</s:ButtonBar>
		<s:Label styleName="menu-label" text="AIレベル{aiLevel2.value}" visible="{playerType2.selectedIndex == 1}" />
		<s:HSlider id="aiLevel2" width="150" minimum="1" maximum="20" showDataTip="false" visible="{playerType2.selectedIndex == 1}" />
	</s:VGroup>
	<s:VGroup includeIn="pause" x="143" y="224" width="150" horizontalAlign="center">
		<s:Button width="100" label="つづける" buttonDown="resume()" />
		<s:Button width="100" label="やりなおす" buttonDown="start()" />
		<s:Button styleName="back" width="100" label="おわる" buttonDown="prepare()" />
	</s:VGroup>
	<v:KeyConfig includeIn="keyConfig"/>
</s:Group>
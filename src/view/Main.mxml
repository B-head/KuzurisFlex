<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:v="view.*" 
		 xmlns:p="presentation.*">
	<fx:Script>
		<![CDATA[
			import common.*;
			import events.*;
			import flash.display.*;
			import flash.events.*;
			import flash.ui.*;
			import model.*;
			import presentation.*;
			
			public static var blockGraphics:BlockGraphics;
			public static var breakLineGraphics:BreakLineGraphics;
			public static var breakBlockGraphics:BreakBlockGraphics;
			public static var shockGraphics:ShockEffectGraphics;
			public static var compactBlockGraphics:BlockGraphics;
			public static var compactBreakLineGraphics:BreakLineGraphics;
			public static var compactBreakBlockGraphics:BreakBlockGraphics;
			
			public static var autoBattleRepeat:Boolean;
			public static var unstableNetworkTest:Boolean;
			
			public function init():void
			{
				SharedObjectHelper.init();
				Debug.addListener(appendLogListener);
				stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown, false, 0, true);
				stage.addEventListener(KeyboardEvent.KEY_UP, onKeyUp, false, 0, true);
				blockGraphics = new BlockGraphics(16, 16);
				breakLineGraphics = new BreakLineGraphics(160, 16);
				breakBlockGraphics = new BreakBlockGraphics(16);
				shockGraphics = new ShockEffectGraphics(16, 16);
				compactBlockGraphics = new BlockGraphics(8, 8);
				compactBreakLineGraphics = new BreakLineGraphics(80, 8);
				compactBreakBlockGraphics = new BreakBlockGraphics(8);
			}
			
			private function appendLogListener(e:AppendTextEvent):void
			{
				if (logView != null)
				{
					if (logView.text.length > 0) logView.appendText("\r");
					logView.appendText(e.text);
					logView.verticalScrollPosition = logView.contentHeight - logView.height;
				}
			}
			
			private function onKeyDown(e:KeyboardEvent):void
			{
				SharedObjectHelper.input.keyDown(e.keyCode);
				SharedObjectHelper.inputVersus1.keyDown(e.keyCode);
				SharedObjectHelper.inputVersus2.keyDown(e.keyCode);
				if (e.shiftKey && e.ctrlKey && e.keyCode == Keyboard.P)
				{
					stats.visible = !stats.visible;
				}
				if (e.shiftKey && e.ctrlKey && e.keyCode == Keyboard.L)
				{
					logView.visible = !logView.visible;
				}
				if (e.shiftKey && e.ctrlKey && e.keyCode == Keyboard.A)
				{
					autoBattleRepeat = !autoBattleRepeat;
				}
				if (e.shiftKey && e.ctrlKey && e.keyCode == Keyboard.N)
				{
					unstableNetworkTest = !unstableNetworkTest;
				}
				if (e.shiftKey && e.ctrlKey && e.keyCode == Keyboard.M && currentState == "top")
				{
					currentState = "battleMulti";
				}
				if (e.shiftKey && e.ctrlKey && e.keyCode == Keyboard.E && currentState == "top")
				{
					currentState = "experiment";
				}
			}
			
			private function onKeyUp(e:KeyboardEvent):void
			{
				SharedObjectHelper.input.keyUp(e.keyCode);
				SharedObjectHelper.inputVersus1.keyUp(e.keyCode);
				SharedObjectHelper.inputVersus2.keyUp(e.keyCode);
			}
			
			private function fullScreenChangeListener(e:MouseEvent):void
			{
				if (fullScreen.selected)
				{
					stage.displayState = StageDisplayState.FULL_SCREEN;
				}
				else
				{
					stage.displayState = StageDisplayState.NORMAL;
				}
			}
			
			private function decideTlial(mode:String):void
			{
				currentState = "trial";
				trial.init(mode);
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="top" stateGroups="title" />
		<s:State name="preTrial" stateGroups="title" />
		<s:State name="preBattle" stateGroups="title" />
		<s:State name="trial" />
		<s:State name="battleDuel" />
		<s:State name="battleMulti" />
		<s:State name="network" />
		<s:State name="howToPlay" />
		<s:State name="credit" />
		<s:State name="experiment" />
	</s:states>

	<s:Image width="854" height="480" source="@Embed(source='../../graphic/photo0000-1251.jpg')" scaleMode="zoom" cacheAsBitmap="true"/>
	<s:Group includeIn="title">
		<s:BorderContainer width="300" x="100" verticalCenter="0">
			<s:layout>
				<s:VerticalLayout horizontalAlign="justify" paddingTop="4" paddingBottom="4"
								  paddingLeft="4" paddingRight="4" />
			</s:layout>
			<s:Image source="@Embed(source='../../graphic/title-logo.png')" />
			<s:Label text="Bata2 version" fontSize="24" color="{Color.skyblue}" />
			<s:Label text="Copyright © 2015 by B_head, All Rights Reserved." color="{Color.lightgray}" />
		</s:BorderContainer>

		<s:VGroup includeIn="top" height="380" x="454" y="50" verticalAlign="middle"
				  horizontalAlign="center">
			<s:Button styleName="title-menu" width="300" label="トライアル"
					  buttonDown="currentState = 'preTrial'" />
			<s:Button styleName="title-menu" width="300" label="ローカル対戦"
					  buttonDown="currentState = 'battleDuel'" />
			<s:Button styleName="title-menu" width="300" label="インターネット対戦"
					  buttonDown="currentState = 'network'" />
			<s:Button styleName="title-menu howto" width="300" label="あそびかた"
					  buttonDown="navigateToURL(new URLRequest('http://kuzuris.com/wiki/howto/'))"/>
			<s:Button width="150" label="クレジット"
					  buttonDown="currentState = 'credit'" />
		</s:VGroup>
		<s:VGroup includeIn="preTrial" height="380" x="454" y="50" verticalAlign="middle"
				  horizontalAlign="center">
			<s:Button styleName="title-menu" width="300"
					  label="{GameSetting.modeToText(GameSetting.axelSpeed)}"
					  buttonDown="decideTlial(GameSetting.axelSpeed)" />
			<s:Button styleName="title-menu" width="300"
					  label="{GameSetting.modeToText(GameSetting.obstacleAttack)}"
					  buttonDown="decideTlial(GameSetting.obstacleAttack)" />
			<s:Button styleName="title-menu" width="300" visible="false"
					  label="{GameSetting.modeToText(GameSetting.polyOmino)}"
					  buttonDown="decideTlial(GameSetting.polyOmino)" />
			<s:Button styleName="title-menu hard-mode" width="300"
					  label="{GameSetting.modeToText(GameSetting.overSpeed)}"
					  buttonDown="decideTlial(GameSetting.overSpeed)" />
			<s:Button styleName="title-menu hard-mode" width="300"
					  label="{GameSetting.modeToText(GameSetting.obstacleFight)}"
					  buttonDown="decideTlial(GameSetting.obstacleFight)" />
			<s:Button styleName="title-menu hard-mode" width="300" visible="false"
					  label="{GameSetting.modeToText(GameSetting.bigOmino)}"
					  buttonDown="decideTlial(GameSetting.bigOmino)" />
			<s:Button styleName="title-menu" width="300"
					  label="{GameSetting.modeToText(GameSetting.free)}"
					  buttonDown="decideTlial(GameSetting.free)" />
			<s:Button styleName="title-menu back" width="200" label="もどる"
					  buttonDown="currentState = 'top'" />
		</s:VGroup>
	</s:Group>
	<v:Trial id="trial" includeIn="trial" itemDestructionPolicy="auto" navigateBack="currentState = 'preTrial'" />
	<v:BattleDuel id="battleDuel" includeIn="battleDuel" itemDestructionPolicy="auto" navigateBack="currentState = 'top'" />
	<v:BattleMulti id="battleMulti" includeIn="battleMulti" itemDestructionPolicy="auto" navigateBack="currentState = 'top'" />
	<v:NetworkLounge id="network" includeIn="network" itemDestructionPolicy="auto" navigateBack="currentState = 'top'" />
	<v:Experiment id="experiment" includeIn="experiment" itemDestructionPolicy="auto" navigateBack="currentState = 'top'" />
	<s:BorderContainer id="credit" includeIn="credit" verticalCenter="0" horizontalCenter="0">
		<s:VGroup horizontalAlign="center">
			<s:Label fontSize="24">効果音素材</s:Label>
			<s:Label click="navigateToURL(new URLRequest('http://pocket-se.info/'))">ポケットサウンド</s:Label>
			<s:Label click="navigateToURL(new URLRequest('http://osabisi.sakura.ne.jp/m2/'))">ザ・マッチメイカァズ2nd</s:Label>
			<s:Button styleName="back" width="100" label="もどる" buttonDown="currentState = 'top'" />
		</s:VGroup>
	</s:BorderContainer>
	<v:VolumeControl bottom="0" left="0" />
	<s:ToggleButton id="fullScreen" bottom="0" right="0" label="フルスクリーン" visible="false" click="fullScreenChangeListener(event)" 
		icon="@Embed(source='../../graphic/full_screen.png')" />
	<p:Stats id="stats" visible="false"/>
	<s:RichEditableText id="logView" width="100%" height="100%" visible="false" tabEnabled="false" mouseEnabled="false" color="{Color.white}" />
</s:Group>
